{
	"info": {
		"_postman_id": "7d3c1fa1-3051-4829-bb58-d9237986ba71",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							" pm.expect(jsonData.name).to.eql(\"nastya\");\r",
							"})\r",
							"pm.test(\"age\", function () {\r",
							" pm.expect(jsonData.age).to.eql(\"32\");\r",
							"})\r",
							"pm.test(\"salary\", function () {\r",
							" pm.expect(jsonData.salary).to.eql(1000);\r",
							"})\r",
							"\r",
							"var requestJson = request.data;\r",
							"console.log(requestJson);\r",
							"\r",
							"var req_name = request.data.name\r",
							"console.log(req_name);\r",
							"\r",
							"pm.test(\"r_name\", function () {\r",
							" pm.expect(request.data.name).to.eql(req_name);\r",
							"})\r",
							"\r",
							"var req_age = request.data.age\r",
							"console.log(req_age);\r",
							"\r",
							"pm.test(\"r_age\", function () {\r",
							" pm.expect(request.data.age).to.eql(req_age);\r",
							"})\r",
							"var req_sal = request.data.salary\r",
							"console.log(req_sal);\r",
							"\r",
							"pm.test(\"r_salary\", function () {\r",
							" pm.expect(request.data.salary).to.eql(req_sal);\r",
							"})\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"var sal_resp = jsonData.family.u_salary_1_5_year\r",
							"console.log(sal_resp);\r",
							"\r",
							"var u_sal_1_5 = req_sal*4\r",
							"console.log(u_sal_1_5);\r",
							"\r",
							"\r",
							"pm.test(\"change_salary\", function () {\r",
							" pm.expect(u_sal_1_5).to.eql(req_sal*4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "nastya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "token",
							"value": "{{token}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData); \r",
							" \r",
							" var req_data = pm.request.url.query.toObject();\r",
							" console.log(req_data);\r",
							"\r",
							"var requ_sal = req_data.salary\r",
							"console.log(requ_sal);\r",
							"\r",
							"pm.test(\"compare_name\", function () {\r",
							"   pm.expect(jsonData.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"compare_age\", function () {\r",
							"   pm.expect(jsonData.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"var resp_SAl = jsonData.salary\r",
							"console.log(resp_SAl);\r",
							"\r",
							"pm.test(\"compare_salary\", function () {\r",
							"   pm.expect(resp_SAl).to.eql(+requ_sal);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"dog_name = jsonData.family.pets.dog.name\r",
							"console.log(dog_name);\r",
							"\r",
							"pm.test(\"name_dog\", function () {\r",
							"   pm.expect(dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"name_paramDOG\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"\r",
							"dog_age = jsonData.family.pets.dog.age\r",
							"console.log(dog_age);\r",
							"\r",
							"pm.test(\"age_dog\", function () {\r",
							"   pm.expect(dog_age).to.eql(4);\r",
							"});\r",
							"pm.test(\"age_paramDOG\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=nastya&age=32&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "nastya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"var req_Data = pm.request.url.query.toObject();\r",
							"console.log(req_Data);\r",
							"\r",
							"var nameREQ = req_Data.name\r",
							"console.log(nameREQ);\r",
							"\r",
							"pm.test(\"test name_req\", function () {\r",
							"    pm.expect(req_Data.name).to.eql(nameREQ);\r",
							"});\r",
							"  var ageREQ = req_Data.age\r",
							"console.log(ageREQ);\r",
							"\r",
							"pm.test(\"test age_req\", function () {\r",
							"    pm.expect(req_Data.age).to.eql(ageREQ);\r",
							"});\r",
							"var salaryREQ = req_Data.salary\r",
							"console.log(salaryREQ);\r",
							"\r",
							" console.log(jsonData.salary);\r",
							"\r",
							" console.log(jsonData.salary[0]);\r",
							" console.log(jsonData.salary[1]);\r",
							" console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"test salary1\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(+salaryREQ);\r",
							" }); \r",
							"\r",
							" pm.test(\"test salary2\", function () {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(salaryREQ*2);\r",
							" }); \r",
							"\r",
							" pm.test(\"test salary3\", function () {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(salaryREQ*3);\r",
							" });\r",
							"\r",
							"pm.environment.set(\"name\", req_Data.name);\r",
							"pm.environment.set(\"age\", req_Data.age);\r",
							"pm.environment.set(\"salary\", req_Data.salary);\r",
							" \r",
							" //var array_s = jsonData.salary\r",
							" console.log(jsonData.salary[0, 1, 2]);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=nastya&age=32&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "nastya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"let req = request.data\r",
							"console.log(req);\r",
							"\r",
							" pm.test(\"Resp_sal_start\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							" pm.test(\"Resp_sal_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							" pm.test(\"Resp_sal_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Resp_sal_1.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"\r",
							"  pm.test(\"Resp_sal_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							" pm.test(\"par_person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"let req_salary = request.data.salary\r",
							"console.log(req_salary);\r",
							"\r",
							"pm.test(\"salary_req\", function () {\r",
							"   pm.expect(jsonData.start_qa_salary).to.eql+(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_req*2\", function () {\r",
							"   pm.expect(jsonData.qa_salary_after_6_months).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"salary_req*2.7\", function () {\r",
							"   pm.expect(jsonData.qa_salary_after_12_months).to.eql(req_salary*2.7);\r",
							"});\r",
							"\r",
							"let qa_salary_after_1_5_year =jsonData[\"qa_salary_after_1.5_year\"]\r",
							"console.log(qa_salary_after_1_5_year);\r",
							"\r",
							"pm.test(\"salary_req*3.3\", function () {\r",
							"   pm.expect(qa_salary_after_1_5_year).to.eql(req_salary*3.3);\r",
							"});\r",
							"\r",
							"let qa_salary_after_3_5_years =jsonData[\"qa_salary_after_3.5_years\"]\r",
							"console.log(qa_salary_after_3_5_years);\r",
							"\r",
							"pm.test(\"salary_req*3.8\", function () {\r",
							"   pm.expect(qa_salary_after_3_5_years).to.eql(req_salary*3.8);\r",
							"})\r",
							"\r",
							"let sal_u_namePerson = jsonData.person.u_name[1]\r",
							"console.log(sal_u_namePerson);\r",
							"\r",
							"pm.test(\"salary_u-name\", function () {\r",
							"   pm.expect(sal_u_namePerson).to.eql+(req_salary);\r",
							"});\r",
							"\r",
							"let u_age_Person = jsonData.person.u_age\r",
							"console.log(u_age_Person);\r",
							"\r",
							"let req_age = request.data.age\r",
							"console.log(req_age);\r",
							"\r",
							"pm.test(\"u-age\", function () {\r",
							"   pm.expect(u_age_Person).to.eql+(req_age);\r",
							"});\r",
							"\r",
							"let resp_sal_5_year = jsonData.person.u_salary_5_years\r",
							"console.log(resp_sal_5_year);\r",
							"\r",
							"pm.test(\"salary_req_5_year*4.2\", function () {\r",
							"   pm.expect(resp_sal_5_year).to.eql(req_salary*4.2);\r",
							"})\r",
							"let u_namePerson = jsonData.person.u_name[0]\r",
							"console.log(u_namePerson);\r",
							"    //[req_age(0)],\r",
							"   // sal_u_namePerson(1)\r",
							"\r",
							"let person =(\r",
							"    {\r",
							"        \"u_age\": 32,\r",
							"        u_namePerson,\r",
							"        u_age_Person,\r",
							"        sal_u_namePerson,\r",
							"        resp_sal_5_year\r",
							"\r",
							"    }       \r",
							");\r",
							"console.log(person);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}